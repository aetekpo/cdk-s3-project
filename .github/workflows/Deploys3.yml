name: Deploy S3 Bucket with CDK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g aws-cdk@latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Check if CDK is bootstrapped
      id: check-bootstrap
      run: |
        if aws cloudformation describe-stacks \
          --stack-name CDKToolkit \
          --region ${{ secrets.AWS_DEFAULT_REGION }} >/dev/null 2>&1; then
          echo "is_bootstrapped=true" >> $GITHUB_OUTPUT
        else
          echo "is_bootstrapped=false" >> $GITHUB_OUTPUT
        fi

    - name: Bootstrap CDK (if needed)
      if: steps.check-bootstrap.outputs.is_bootstrapped == 'false'
      run: |
        cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_DEFAULT_REGION }} \
          --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess

    - name: Synthesize CDK stack
      run: cdk synth

    - name: Deploy CDK stack
      run: cdk deploy --require-approval never --verbose
